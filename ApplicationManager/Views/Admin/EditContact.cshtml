@using Microsoft.JSInterop;
@model ContactsModel
@inject IJSRuntime JS

@{
    var image_path = "/Images/" + Model.ImageUrl;
}
<p>
    <a asp-action="Index">Главная</a> -> @Model.Name_page
</p>
<h1>@Model.Name_page</h1>
<br />
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>


<div ng-controller="AdminContacts">
    <div>
        <form asp-controller="Admin" asp-action="SaveContacts" method="post" id="SaveContactsForm" asp-antiforgery="true" enctype="multipart/form-data">

        <table>
            <thead class="thead-light">
                <tr>
                    <th>id</th>
                    <th>Название</th>
                    <th>Описание</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="Contact in Contacts">
                    <td class="center">{{$index+1}}</td>
                    <td class="right"><input ng-model="Contact.Name" ng-true-value="Contact.Name.value" /></td>
                    <td class="right"><input ng-model="Contact.Description" value="Contact.Description.value" /></td>
                    <td><a href="#" ng-click="RowDelete($index)"><i class="fa fa-times"> - </i></a></td>
                </tr>
                <tr>
                    <td>
                        
                        <a href="#" ng-click="AddNewRow()"><i class="fa fa-plus">+</i></a>
                            
                            @*<input class="btn btn-primary" type="submit" value="Сохранить" ng-click="loadfiles()" />*@
                        
                    </td>
                </tr>
            </tbody>
        </table>
            <div class="btn btn-primary">
                <label for="LoadNewAddress">Загрузить новое расположение</label>
       </div>            
            <input type="file" name="ImageUrl" accept="image/*" class="LoadNewAddress"
                   id="LoadNewAddress" file-on-change="OnAddressChange" />
   
            <input type="hidden" name="stringData" ng-value="data()" />

            <div id="image-address" class="image-address" style="background-image: url(@image_path)"> </div>
            <a class="btn btn-primary" href="#" onclick="document.getElementById('SaveContactsForm').submit()"
               ng-click="loadfiles()">Сохранить</a>
        </form>
    </div>
    <button id="openModalButton" ng-click="OpenMyModal()">Открыть окно с контактами</button>
    @* Начало модального окна*@
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Модальное окно</h5>
                    <button type="button" class="close" ng-click="CloseMyModal()">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="social-nets">
                        <div ng-repeat="SocialNet in SocialNets" class="flex-container">
                            <div class="image-socialnet" ng-style="{'background-image': 'url(/Images/' + SocialNet.ImageUrl + ')'}"></div>
                            <input ng-model="SocialNet.Url" ng-true-value="SocialNet.Url.value" />
                            <a class="btn" href="#" ng-click="RowDeleteNets($index)"><i class="fa fa-times"> - </i></a><br />
                            <input type="file" id="file" name='file' ng-model="SocialNet.ImageUrl"
                                   file-on-change="onFileChange" additional-param="$index"/>
                        </div>
                        <a class="btn btn-primary" href="#" ng-click="AddNewRowNets()"><i class="fa fa-plus">+</i></a><br />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" ng-click="CloseMyModal()">Закрыть</button>
                </div>
            </div>
        </div>
    </div>

</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
<script src="~/js/angular.min.js"></script>
<script src="~/js/site.js"></script>
<script>
    var MyApp = angular.module("MyApp", []);
    //для обработки изменения <input type = "file">
    MyApp.directive('fileOnChange', function () {
        return {
            restrict: 'A',
            scope: {
                fileOnChange: '=',
                additionalParam: '=' // Дополнительный параметр
            },
            link: function (scope, element, attrs) {
                var onChangeHandler = function (event) {
                    scope.fileOnChange(event, scope.additionalParam); // Передача дополнительного параметра (если нужен)
                };
                element.bind('change', onChangeHandler);
            }
        };
    });

    MyApp.controller('AdminContacts', function ($scope, $http) {

        //временный массив новых загружаемых файлов
        $scope.files = [] 
        $scope.onFileChange = function (event, index) {
            var filename = event.target.files[0].name;
            $scope.SocialNets[index].ImageUrl = filename;

             //получили текущий файл
            var file = event.target.files[0];
            //закинули во временный массив, где хранятся все файлы на текущий момент
            $scope.files.push(file);

            var reader = new FileReader();
            reader.onload = function (e) {
                $scope.$apply(); // обновление модели AngularJS
            };
            reader.readAsDataURL(file);

           
            // (ибо зачем нам при каждом выборе файла сразу его загружать?)
           
        };
        //метод, ответственный за изменение картинки адреса при загрузке новой
        $scope.OnAddressChange = function (event) {
            //получили файл
            var file = event.target.files[0];
            //получили его текущий физический путь
            var url = URL.createObjectURL(file);
            //указали нужному блоку стиль бакграунда с новой картинкой
            document.getElementById("image-address").style.backgroundImage = "url(" + url + ")";
        }

        $scope.loadfiles = function(){
            alert('вызов сохранения картинок');
            // Создаем объект FormData
            var formData = new FormData();

            // Добавляем каждый файл в массиве к объекту FormData
            for (var i = 0; i < $scope.files.length; i++) {
                formData.append("files", $scope.files[i]);
            }

            // Отправляем данные формы на сервер
            $http.post("/Admin/SaveContactfiles", formData, {
                transformRequest: angular.identity,
                headers: { 'Content-Type': undefined }
            }).then(function (response) {
                // Обработка успешного ответа от сервера
            }, function (error) {
                // Обработка ошибки
            });
        };

        $scope.OpenMyModal = function(){
            $.ajax({
                url: '/Admin/ModalViewContactsSocialNets',
                type: 'GET',
                success: function (data) {
                    // Вставляем полученное содержимое в модальное окно
                    //$('#myModal .modal-body').html(data); сейчас это уже не надо, 
                    // так как наполнение статичное, для подгрузки данных через angularJS
                    //а иначе данные через перебор массива не выводятся
                    $scope.GetStringNets();
                    // Открываем модальное окно
                    $('#myModal').modal('show');
                }
            });
        }
        $scope.CloseMyModal = function(){
            $('#myModal').modal('hide');
        }

        $scope.AddNewRow = function () {
            $scope.Contacts.push({ Name: '', Description: '' });
        };


        $scope.getString = function () {
            $http.get('/Admin/GetString')
                .then(function (response) {
                    $scope.Contacts = JSON.parse(response.data);
                }, function (error) {
                    alert(error)
                });
        };
        $scope.getString();

        $scope.RowDelete = function (index) {
            if (index > -1) {
                $scope.Contacts.splice(index, 1);
            }
        };

        //сбор значений двух массивов перед отправкой на сервер
        $scope.data = function(){
            var data = JSON.stringify({
                Contacts: $scope.Contacts,
                SocialNets: $scope.SocialNets
            });
            return data;
        }


        $scope.AddNewRowNets = function () {
            $scope.SocialNets.push({ Url: '', ImageUrl: '' });
        };
        $scope.RowDeleteNets = function (index) {
            if (index > -1) {
                $scope.SocialNets.splice(index, 1);
            }
        };

        $scope.GetStringNets = function () {
            $http.get('/Admin/GetStringSocialNet')
                .then(function (response) {
                    $scope.SocialNets = JSON.parse(response.data);
                    /*alert(response.data);*/ //по прежнему работает, и корректно срабатывает, но в самой верствке не выводятся блять ебанный нахуй рот элементы
                }, function (error) {
                    alert(error)
                });
        };
        $scope.GetStringNets();
        
    });

    
</script>
